// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyScimAPI.Data;

namespace MyScimAPI.Data.Migrations
{
    [DbContext(typeof(ScimDataContext))]
    [Migration("20211007124105_AddEntitlementAndRole")]
    partial class AddEntitlementAndRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyScimAPI.Models.ScimUser", b =>
                {
                    b.Property<Guid>("ScimUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schemas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserId");

                    b.ToTable("ScimUser");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserAddress", b =>
                {
                    b.Property<int>("ScimUserAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formatted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserAddressId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserAddress");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserEmail", b =>
                {
                    b.Property<int>("ScimUserEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserEmailId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserEmail");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserEnterpriseUser", b =>
                {
                    b.Property<int>("ScimUserEnterpriseUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ScimUserEnterpriseUserId");

                    b.HasIndex("ScimUserId")
                        .IsUnique();

                    b.ToTable("ScimUserEnterpriseUser");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserEntitlement", b =>
                {
                    b.Property<int>("ScimUserEntitlementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserEntitlementId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserEntitlement");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserGroup", b =>
                {
                    b.Property<int>("ScimUserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserGroupId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserGroup");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserIm", b =>
                {
                    b.Property<int>("ScimUserImId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserImId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserIm");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserManager", b =>
                {
                    b.Property<int>("ScimUserManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScimUserEnterpriseUserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserManagerId");

                    b.HasIndex("ScimUserEnterpriseUserId")
                        .IsUnique();

                    b.ToTable("ScimUserManager");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserMeta", b =>
                {
                    b.Property<int>("ScimUserMetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserMetaId");

                    b.HasIndex("ScimUserId")
                        .IsUnique();

                    b.ToTable("ScimUserMeta");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserName", b =>
                {
                    b.Property<int>("ScimUserNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formatted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HonorificPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HonorificSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ScimUserNameId");

                    b.HasIndex("ScimUserId")
                        .IsUnique();

                    b.ToTable("ScimUserName");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserPhoneNumber", b =>
                {
                    b.Property<int>("ScimUserPhoneNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserPhoneNumberId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserPhoneNumber");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserPhoto", b =>
                {
                    b.Property<int>("ScimUserPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserPhotoId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserPhoto");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserRole", b =>
                {
                    b.Property<int>("ScimUserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserRoleId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserRole");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserX509Certificate", b =>
                {
                    b.Property<int>("ScimUserX509CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ScimUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScimUserX509CertificateId");

                    b.HasIndex("ScimUserId");

                    b.ToTable("ScimUserX509Certificate");
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserAddress", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Addresses")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserEmail", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Emails")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserEnterpriseUser", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithOne("EnterpriseUser")
                        .HasForeignKey("MyScimAPI.Models.ScimUserEnterpriseUser", "ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserEntitlement", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Entitlements")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserGroup", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Groups")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserIm", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Ims")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserManager", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUserEnterpriseUser", "ScimUserEnterpriseUser")
                        .WithOne("Manager")
                        .HasForeignKey("MyScimAPI.Models.ScimUserManager", "ScimUserEnterpriseUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserMeta", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithOne("Meta")
                        .HasForeignKey("MyScimAPI.Models.ScimUserMeta", "ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserName", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithOne("Name")
                        .HasForeignKey("MyScimAPI.Models.ScimUserName", "ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserPhoneNumber", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserPhoto", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Photos")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserRole", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("Roles")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyScimAPI.Models.ScimUserX509Certificate", b =>
                {
                    b.HasOne("MyScimAPI.Models.ScimUser", "ScimUser")
                        .WithMany("X509Certificates")
                        .HasForeignKey("ScimUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
